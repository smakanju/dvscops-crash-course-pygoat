name: CI Pipeline

on: [push, pull_request]

permissions:
  actions: read
  contents: read
  security-events: write

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}
  SHA: ${{ github.event.pull_request.head.sha || github.event.after }}

jobs:
  codeql_analysis:
    name: Perform CodeQL Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: 'python'

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  sast_scan:
    name: Run Bandit Scan
    runs-on: ubuntu-latest
    needs: codeql_analysis

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit Scan
        run: bandit -ll -ii -r . -f json -o bandit-report.json

      - name: Upload Bandit Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: bandit-findings
          path: bandit-report.json

  image_scan:
    name: Build Image and Run Docker Scout Scan
    runs-on: ubuntu-latest
    needs: codeql_analysis

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate to Docker Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.revision=${{ env.SHA }}
          tags: |
            type=edge,branch=$repo.default_branch
            type=semver,pattern=v{{version}}
            type=sha,prefix=,suffix=,format=short

      - name: Build Docker Image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          load: ${{ github.event_name == 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Docker Scout Scan
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/scout-action@v1
        with:
          command: quickview,compare
          image: ${{ steps.meta.outputs.tags }}
          to-latest: true
          organization: your-docker-organization
          dockerhub-user: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub-password: ${{ secrets.DOCKERHUB_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

  dast_scan:
    name: Run ZAP Full Scan
    runs-on: ubuntu-latest
    needs: codeql_analysis

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.2.0
        with:
          target: 'http://your-application-url'
          rules_file: '.github/workflows/zap/rules.yaml'
          docker_name: 'owasp/zap2docker-stable'
